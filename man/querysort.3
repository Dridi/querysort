.
.TH QUERYSORT 3
.
.SH "NAME"
\fBquerysort\fR \- RFC 1866 querystring sorting library
.
.SH "SYNOPSIS"
.nf 
\fB#include <querysort/querysort.h>\fR
.PP 
\fBchar * qs_sort_copy(const char *uri);\fR
\fBint qs_sort(const char *uri, char *sorted_uri);\fR
.fi 
.SH "DESCRIPTION"
.
This page summarizes the functions provided by the \fBquerysort\fP library.
.
.SS char * qs_sort_copy(const char *uri)
.PP
Create a copy of the given \fIuri\fR with its querystring sorted. The URI is
assumed to be valid. If the URI doesn't have a querystring, a simple copy is
returned.
.PP
A returned non-NULL URI must be freed by the caller.
.
.SS int qs_sort(const char *uri, char *destination)
.PP
Writes the given \fIuri\fR with its querystring sorted to the \fIdestination\fR.
The URI is assumed to be valid. If the URI doesn't have a querystring, a simple
copy is made.
.
.SH "RETURN VALUE"
Functions that return pointers return \fBNULL\fR on error, and set errno to the
corresponding error\-code returned by functions returning an integer.
.br 
Functions that return an integer return one of the following error codes:
.TP 5
.B QS_OK
The function succeeded.
.TP 5
.B QS_ERROR
An error occurred (see \fBerrno\fR).
.
.SH "EXAMPLE"
.PP
.B Basic invocation
.IP 
char *sorted_uri = querysort("http://localhost/?some=thing&an=other");
.br
if (sorted_uri != NULL) {
.br
    puts(sorted_uri);
.br
    free(sorted_uri);
.br
}
.SH "AUTHOR"
Dridi Boukelmoune <dridi.boukelmoune@gmail.com>
.
.SH "COPYRIGHT"
.PP 
Copyright \(co 2012 Dridi Boukelmoune. License FreeBSD: BSD 2\-clause license
.RB < http://www.freebsd.org/copyright/freebsd\-license.html >.
.br 
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.
.SH "SEE ALSO"
\fBquerysort\fR(1)

