.\ querysort - RFC 1866 querystring sorting library
.\
.\ Copyright (C) 2012, Dridi Boukelmoune <dridi.boukelmoune@gmail.com>
.\ All rights reserved.
.\
.\ Redistribution  and use in source and binary forms, with or without
.\ modification,  are permitted provided that the following conditions
.\ are met:
.\
.\ 1. Redistributions   of  source   code   must   retain  the   above
.\    copyright  notice, this  list of  conditions  and the  following
.\    disclaimer.
.\ 2. Redistributions   in  binary  form  must  reproduce  the   above
.\    copyright  notice, this  list of  conditions and  the  following
.\    disclaimer   in  the   documentation   and/or  other   materials
.\    provided with the distribution.
.\
.\ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\ "AS  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT  NOT
.\ LIMITED  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  FITNESS
.\ FOR  A  PARTICULAR  PURPOSE ARE DISCLAIMED. IN NO EVENT  SHALL  THE
.\ COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\ INCIDENTAL,    SPECIAL,   EXEMPLARY,   OR   CONSEQUENTIAL   DAMAGES
.\ (INCLUDING,  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\ SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\ STRICT  LIABILITY,  OR  TORT (INCLUDING  NEGLIGENCE  OR  OTHERWISE)
.\ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\ OF THE POSSIBILITY OF SUCH DAMAGE.
.
.TH QUERYSORT 3
.
.SH "NAME"
\fBquerysort\fR \- RFC 1866 querystring sorting library
.
.SH "SYNOPSIS"
.nf 
\fB#include <querysort/querysort.h>\fR
.PP 
\fBchar * qs_sort_copy(const char *uri);\fR
\fBint qs_sort(const char *uri, char *sorted_uri);\fR
.fi 
.SH "DESCRIPTION"
.
This page summarizes the functions provided by the \fBquerysort\fP library.
.
.SS char * qs_sort_copy(const char *uri)
.PP
Create a copy of the given \fIuri\fR with its querystring sorted. The URI is
assumed to be valid. If the URI doesn't have a querystring, a simple copy is
returned.
.PP
A returned non-NULL URI must be freed by the caller.
.
.SS int qs_sort(const char *uri, char *destination)
.PP
Writes the given \fIuri\fR with its querystring sorted to the \fIdestination\fR.
The URI is assumed to be valid. If the URI doesn't have a querystring, a simple
copy is made.
.
.SH "RETURN VALUE"
Functions that return pointers return \fBNULL\fR on error, and set errno to the
corresponding error\-code returned by functions returning an integer.
.br 
Functions that return an integer return one of the following error codes:
.TP 5
.B QS_OK
The function succeeded.
.TP 5
.B QS_ERROR
An error occurred (see \fBerrno\fR).
.
.SH "EXAMPLE"
.PP
.B Basic invocation
.IP 
char *sorted_uri = querysort("http://localhost/?some=thing&an=other");
.br
if (sorted_uri != NULL) {
.br
    puts(sorted_uri);
.br
    free(sorted_uri);
.br
}
.SH "AUTHOR"
Dridi Boukelmoune <dridi.boukelmoune@gmail.com>
.
.SH "COPYRIGHT"
.PP 
Copyright \(co 2012 Dridi Boukelmoune. License FreeBSD: BSD 2\-clause license
.RB < http://www.freebsd.org/copyright/freebsd\-license.html >.
.br 
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.
.SH "SEE ALSO"
\fBquerysort\fR(1)

